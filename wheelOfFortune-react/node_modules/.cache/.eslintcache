[{"/Users/daikexin/react-gcp-app-engine/src/index.js":"1","/Users/daikexin/react-gcp-app-engine/src/App.js":"2","/Users/daikexin/react-gcp-app-engine/src/reportWebVitals.js":"3","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/index.js":"4","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/App.js":"5","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/reportWebVitals.js":"6","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/Game.js":"7","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/Scores.js":"8","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/components/Form.js":"9","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/components/SaveRecordModel.js":"10","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/Profile.js":"11","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/startPage.js":"12","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/StartPage.js":"13","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/components/LoginForm.js":"14","/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/components/GlobalContext.js":"15","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/index.js":"16","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/reportWebVitals.js":"17","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/App.js":"18","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/components/GlobalContext.js":"19","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/pages/Game.js":"20","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/pages/StartPage.js":"21","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/pages/Scores.js":"22","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/pages/Profile.js":"23","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/components/LoginForm.js":"24","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/components/Form.js":"25","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/components/SaveRecordModel.js":"26"},{"size":535,"mtime":1698863794804,"results":"27","hashOfConfig":"28"},{"size":528,"mtime":1698863794803,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1698863794804,"results":"30","hashOfConfig":"28"},{"size":639,"mtime":1701383470233,"results":"31","hashOfConfig":"32"},{"size":702,"mtime":1701384492371,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1698863794804,"results":"34","hashOfConfig":"32"},{"size":7285,"mtime":1701384010634,"results":"35","hashOfConfig":"32"},{"size":3098,"mtime":1701384402230,"results":"36","hashOfConfig":"32"},{"size":730,"mtime":1699912464054,"results":"37","hashOfConfig":"32"},{"size":977,"mtime":1701217355383,"results":"38","hashOfConfig":"32"},{"size":4995,"mtime":1701384290111,"results":"39","hashOfConfig":"32"},{"size":3067,"mtime":1701384478539,"results":"40","hashOfConfig":"32"},{"size":3067,"mtime":1701384478539,"results":"41","hashOfConfig":"32"},{"size":3615,"mtime":1701362538911,"results":"42","hashOfConfig":"32"},{"size":493,"mtime":1701362407556,"results":"43","hashOfConfig":"32"},{"size":639,"mtime":1701383470233,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1698863794804,"results":"46","hashOfConfig":"45"},{"size":702,"mtime":1701384492371,"results":"47","hashOfConfig":"45"},{"size":493,"mtime":1701362407556,"results":"48","hashOfConfig":"45"},{"size":7120,"mtime":1701462674519,"results":"49","hashOfConfig":"45"},{"size":2897,"mtime":1701462730313,"results":"50","hashOfConfig":"45"},{"size":2968,"mtime":1701462711837,"results":"51","hashOfConfig":"45"},{"size":4781,"mtime":1701462697625,"results":"52","hashOfConfig":"45"},{"size":3460,"mtime":1701462743434,"results":"53","hashOfConfig":"45"},{"size":730,"mtime":1699912464054,"results":"54","hashOfConfig":"45"},{"size":977,"mtime":1701462302805,"results":"55","hashOfConfig":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y4dycl",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gjhxnb",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ruvngt",{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daikexin/react-gcp-app-engine/src/index.js",[],[],"/Users/daikexin/react-gcp-app-engine/src/App.js",[],[],"/Users/daikexin/react-gcp-app-engine/src/reportWebVitals.js",[],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/index.js",[],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/App.js",[],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/reportWebVitals.js",[],[],["140"],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/Game.js",["141","142","143","144","145"],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/Scores.js",["146","147"],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/components/Form.js",[],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/components/SaveRecordModel.js",[],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/Profile.js",["148","149"],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/startPage.js",[],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/StartPage.js",["150","151","152"],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/components/LoginForm.js",["153","154"],[],"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/components/GlobalContext.js",[],[],"/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/index.js",[],[],"/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/reportWebVitals.js",[],[],"/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/App.js",[],[],"/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/components/GlobalContext.js",[],[],"/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/pages/Game.js",["155","156","157","158","159","160"],[],"import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport './Game.css';\nimport Form from '../components/Form'\nimport SaveRecordModel from '../components/SaveRecordModel';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useGlobalContext } from '../components/GlobalContext';\n\n\n\nfunction Game() {\n    const [inputValueFromForm, setInputValueFromForm] = useState('');\n    const [info, setInfo] = useState('');\n    const [hiddenPhrase, setHiddenPhrase] = useState('');\n    const [phrase, setPhrase] = useState('');\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [score, setScore] = useState(0);\n    const location = useLocation();\n    const currentDate = getCurrentDate();\n    const [submittedLetters, setSubmittedLetters] = useState([]);\n    const phrases = [\n        'Hello World',\n        'Happy coding',\n        'React is awesome',\n        'JavaScript rocks',\n        'Web development',\n    ];\n    const { googleID, updateGoogleID } = useGlobalContext();\n    //get current date\n    function getCurrentDate() {\n        const currentDate = new Date();\n\n        const year = currentDate.getFullYear();\n        const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n        const day = currentDate.getDate().toString().padStart(2, '0');\n\n        const formattedDate = `${year}-${month}-${day}`;\n\n        return formattedDate;\n    }\n    // get the phrase randomly\n    const getRandomPhrase = () => {\n        // setCurrentTimestamp(Date.now());\n        const randomIndex = Math.floor(Math.random() * phrases.length);\n        return phrases[randomIndex];\n    };\n    // deal with submit button\n    const handleFormSubmit = (value) => {\n        // Receive the input value from MyForm and set it in App's state\n\n        setInputValueFromForm(value);\n        processGuess(value)\n    };\n    // get the hidden phrase according to the phrase\n    const getHiddenPhrase = (phrase) => {\n        let hiddenPhrase = '';\n\n        for (let i = 0; i < phrase.length; i++) {\n            if (/[a-zA-Z]/.test(phrase[i])) {\n                hiddenPhrase += '*';\n            } else {\n                hiddenPhrase += phrase[i];\n            }\n        }\n        return hiddenPhrase;\n    }\n    //process with the guess\n    const processGuess = (ch) => {\n        const newHiddenPhrase = [...hiddenPhrase];\n        const normalizedCh = ch.toLowerCase();\n\n        if (/^[a-zA-Z]$/.test(ch)) {\n            if(submittedLetters.includes(normalizedCh)){\n                setInfo(\"You have input that!\");\n                return;\n            }\n            setSubmittedLetters([...submittedLetters, normalizedCh]);// record the input letter\n            let flag = false;\n\n            for (let i = 0; i < phrase.length; ++i) {\n                const letter = phrase[i].toLowerCase();\n                if (letter === normalizedCh) {\n                    flag = true;\n                    newHiddenPhrase[i] = phrase[i];\n                    setHiddenPhrase(newHiddenPhrase);\n                }\n            }\n\n            if (!flag) {\n                setScore(score - 2);\n                setInfo(\"It's wrong! Input again!\")\n            } else {\n                setScore(score + 10);\n                setInfo(\"It's right. Input next guess\")\n            }\n        } else {\n            setInfo(\"It is not a letter!!!\")\n        }\n        if (newHiddenPhrase.join('') === phrase) {\n            // setCurrentTimestamp(Date.now());\n            setInfo(\"Congratulations!\");\n            setIsGameOver(true);\n\n        }\n    }\n    // initialize the game\n    const initializeGame = () => {\n        const newPhrase = getRandomPhrase();\n        setPhrase(newPhrase);\n        setInfo('');\n        setHiddenPhrase(getHiddenPhrase(newPhrase));\n        setScore(0);\n        setSubmittedLetters([])\n    };\n    // handle with the replay button\n    const handleReplayClick = () => {\n        initializeGame();\n    };\n    //handle with the end game button\n    const handleEndGameClick = () => {\n\n        setInfo('Game ended. Thank you for playing!');\n        setHiddenPhrase(getHiddenPhrase(phrase));\n        setIsGameOver(true)\n    };\n    //handlwe with the save\n    const handleSaveRecord = () => {\n        setIsGameOver(false);\n        saveGameRecord();\n        initializeGame();\n    };\n    // post gameRecord to database\n    async function saveGameRecord() {\n\n        const postData = {\n            googleId: googleID,\n            score,\n            timestamp: currentDate,\n        };\n\n        try {\n            const response = await axios.post('https://wheeloffortune-game.wl.r.appspot.com/game/saveGameRecord', postData);\n\n        } catch (error) {\n            console.error('Error posting data:', error);\n        }\n    };\n    useEffect(() => {\n        initializeGame();\n        localStorage.setItem(\"googleId\",googleID);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <img\n                src=\"wheelOfFortune.png\"\n                alt=\"Top Image\"\n                style={{\n                    height: '300px',\n                    width: '1000px'\n                }}\n            />\n            <div className=\"left-column\">\n\n\n                <div>\n                    <Link to=\"/profile\">\n                        Go to Profile page\n                    </Link>\n                </div>\n                <div style={{ marginTop: '30px' }}>\n                    <Link to=\"/scores\">\n                        Go to Scores page\n                    </Link>\n                </div>\n                <div style={{ marginTop: '30px' }}>\n                    <Link to=\"/\">\n                        Go back to Login page\n                    </Link>\n                </div>\n            </div>\n\n            <div className=\"game-part\">\n                <h1>The following is the hiddenPhrase</h1>\n\n                <div style={{\n                    fontSize: '50px',\n                    marginTop: '40px'\n                }}>{hiddenPhrase}</div>\n                <div>\n                    {isGameOver ? (\n                        <h1 style={{ color: 'red' }}>Game Over</h1>\n                    ) : (\n                        <p ></p>\n                    )}\n                    <div style={{ fontSize: '30px', color: 'purple' }}>Score: {score}</div>\n                </div>\n                <div className=\"form-container\">\n                    <Form onSubmit={handleFormSubmit} />\n                    <h2>{info}</h2>\n                    <div>\n                        <button className='bottom-button replay-button' onClick={handleReplayClick}>Replay</button>\n                        <button className='bottom-button end-game-button' onClick={handleEndGameClick}>End Game</button>\n                    </div>\n\n                </div>\n            </div>\n            <SaveRecordModel\n                isOpen={isGameOver}\n                onClose={() => {\n                    \n                    setIsGameOver(false);\n                    initializeGame()\n                }}\n                onSave={handleSaveRecord}\n            />\n        </div>\n    );\n}\n\nexport default Game;\n","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/pages/StartPage.js",["161","162","163","164"],[],"import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport LoginForm from '../components/LoginForm'\nimport axios from 'axios'\n\nimport { useNavigate } from 'react-router-dom';\n\nfunction StartPage() {\n\n    const [username, setUsername] = useState('');\n    const navigate = useNavigate();\n\n    // user is the currently logged in user\n    const [user, setUser] = useState(null);\n    // title is just a sample value entered in form\n\n    // when the user submits form...don't really do anything in this sample\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        // do whatever on submit\n        const postData = {\n            googleId: localStorage.getItem(\"googleId\"),\n            name: username\n        };\n\n        try {\n            const response = await axios.post('https://wheeloffortune-game.wl.r.appspot.com/user/saveUserRecord', postData);\n        } catch (error) {\n            console.error('Error posting data:', error);\n        }\n    };\n\n    // this will be called by the LoginForm\n    function HandleLogin(user) {\n        setUser(user);\n\n    }\n\n\n    const startGame = () => {\n        navigate('/game');\n    };\n    // handle the input\n    const handleInputChange = (e) => {\n        setUsername(e.target.value);\n    };\n\n\n    return (\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n            <img\n                src=\"wheelOfFortune.png\"\n                alt=\"Description of the image\"\n                style={{ maxWidth: '100%', maxHeight: '400px', borderRadius: '10px' }}\n            />\n            {/* <button onClick={signInWithGoogle}>Sign in with Google</button>\n\t  <button onClick={signOutUser}>Sign out</button>\n      <p>{userId}</p> */}\n\n            <div >\n\n                <LoginForm LoginEvent={HandleLogin} />\n                {/* show the input if the user has logged in */}\n                {user ?\n                    <form onSubmit={handleSubmit}>\n                        <label>\n                            Please input your username:\n                            <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\n                            <button type=\"submit\">Submit</button>\n                        </label>\n\n                        <br />\n\n                    </form> : <br />\n                }\n\n            </div>\n\n            <div>\n                <button onClick={startGame}\n                    style={{\n                        padding: '10px 20px',\n                        fontSize: '16px',\n                        backgroundColor: 'purple',\n                        color: '#fff',\n                        border: 'none',\n                        borderRadius: '5px',\n                        cursor: 'pointer',\n                        marginTop: '30px'\n                    }}>Start the Game</button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default StartPage;","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/pages/Scores.js",["165","166"],[],"import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { useGlobalContext } from '../components/GlobalContext';\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\n\n\nfunction Scores() {\n  const { googleID, updateGoogleID } = useGlobalContext();\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // get username by googleId\n  const getUsername = async (googleId) => {\n    try {\n      const response = await axios.get('https://wheeloffortune-game.wl.r.appspot.com/user/findByGoogleId', {\n        params: {\n          googleId: googleId\n        }\n      });\n\n      return response.data[0].name || '';\n    } catch (error) {\n      console.error('Error fetching username:', error);\n      return '';\n    }\n  };\n  // get all the records\n  const displayAll = () => {\n    axios.get('https://wheeloffortune-game.wl.r.appspot.com/game/findAllGameRecords'\n\n    )\n      .then(async (response) => {\n        // use Promise.all to wait for all getUsername\n        const usernames = await Promise.all(response.data.map((score) => getUsername(score.googleId)));\n\n        //combine usernames and scores\n        const updatedRecords = response.data.map((score, index) => ({\n          ...score,\n          username: usernames[index],\n        }));\n\n        setRecords(updatedRecords);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    googleID ? updateGoogleID(googleID) : updateGoogleID(localStorage.getItem(\"googleId\"))\n    displayAll();\n\n  }, []);\n\n  return (\n    <div className=\"Scores\">\n      <Link to=\"/game\">\n        Go back to Game page\n      </Link>\n      <h1>Scores</h1>\n      <div>\n        <h2>Records for All players</h2>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <table style={{ width: '80%', borderCollapse: 'collapse', marginTop: '20px', marginLeft: '70px' }}>\n            <thead>\n              <tr>\n                <th style={{ textAlign: 'left' }}>username</th>\n                <th style={{ textAlign: 'left' }}> Google ID</th>\n                <th style={{ textAlign: 'left' }}>Score</th>\n                <th style={{ textAlign: 'left' }}>Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {records.map((score) => (\n                <tr key={score.id}>\n                  <td style={{ textAlign: 'left' }}>{score.username}</td>\n                  <td style={{ textAlign: 'left' }}>{score.googleId}</td>\n                  <td style={{ textAlign: 'left' }}>{score.score}</td>\n                  <td style={{ textAlign: 'left' }}>{score.timestamp}</td>\n                  <td style={{ textAlign: 'left' }}>\n\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default Scores;\n","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/pages/Profile.js",["167","168","169"],[],"import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { useGlobalContext } from '../components/GlobalContext';\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\n\n\nfunction Profile() {\n  const { googleID, updateGoogleID } = useGlobalContext();\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [usernameChange, setUsernameChange] = useState('');\n  const [username, setUsername] = useState('');\n\n\n\n  //delete the record by id\n  const handleDelete = (id) => {\n    axios.delete('https://wheeloffortune-game.wl.r.appspot.com/game/deleteGameRecord/' + id)\n      .then(response => {\n        displayByGoogleId();\n      })\n      .catch(error => {\n        setError(error.message);\n        console.log(\"error.message\", error.message)\n\n      });\n  };\n  //change the name \n  const handleChange = () => {\n    const postData = {\n      googleId: googleID,\n      name: usernameChange\n    };\n\n    try {\n      const response = axios.post('https://wheeloffortune-game.wl.r.appspot.com/user/saveUserRecord', postData);\n    } catch (error) {\n      console.error('Error posting data:', error);\n    }\n  };\n  //get the username by googleId\n  const getUsername = async (googleId) => {\n    try {\n      const response = await axios.get('https://wheeloffortune-game.wl.r.appspot.com/user/findByGoogleId', {\n        params: {\n          googleId: googleId\n        }\n      });\n\n      return response.data[0].name || '';\n    } catch (error) {\n      console.error('Error fetching username:', error);\n      return '';\n    }\n  };\n  // display all the records by googleId\n  const displayByGoogleId = () => {\n    axios.get('https://wheeloffortune-game.wl.r.appspot.com/game/findByGoogleId', {\n      params: {\n        googleId: googleID\n      }\n    })\n      .then(async (response) => {\n        //use Promise.all to wait for all the getUsername\n        const usernames = await Promise.all(response.data.map((score) => getUsername(score.googleId)));\n        // combine usernames and scores\n        setUsername(usernames[0])\n        const updatedRecords = response.data.map((score, index) => ({\n          ...score,\n          username: usernames[index],\n        }));\n\n        setRecords(updatedRecords);\n        setLoading(false);\n        console.log(\"updatedRecords\", updatedRecords);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n     // if googleId undefined, get it from localStorage\n    updateGoogleID(localStorage.getItem(\"googleId\"));\n  }, [updateGoogleID]);\n\n  useEffect(() => {\n    if (googleID) {\n      // cal  get again if googleID change\n      displayByGoogleId();\n    }\n  }, [googleID]);\n\n  return (\n    <div className=\"Profile\">\n      <Link to=\"/game\">\n        Go back to Game page\n      </Link>\n      <h1>Profile</h1>\n      <div style={{ marginLeft: '70px'  }}>\n        <form onSubmit={handleChange}>\n          <h2>Edit Username</h2>\n          <div>Your current username is : {username}</div>\n          <label>\n            Please input the username you want to change:\n            <input type=\"text\" value={usernameChange} onChange={e => setUsernameChange(e.target.value)} />\n            <button type=\"submit\">Change</button>\n          </label>\n\n          <br />\n\n        </form> <br />\n      </div>\n      <div>\n        <h2>Records for {googleID}</h2>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <table style={{ width: '80%', borderCollapse: 'collapse', marginTop: '20px',marginLeft: '70px'  }}>\n            <thead>\n              <tr>\n                <th style={{ textAlign: 'left' }}>username</th>\n                <th style={{ textAlign: 'left' }}> Google ID</th>\n                <th style={{ textAlign: 'left' }}>Score</th>\n                <th style={{ textAlign: 'left' }}>Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {records.map((score) => (\n                <tr key={score.id}>\n                  <td style={{ textAlign: 'left' }}>{score.username}</td>\n                  <td style={{ textAlign: 'left' }}>{score.googleId}</td>\n                  <td style={{ textAlign: 'left' }}>{score.score}</td>\n                  <td style={{ textAlign: 'left' }}>{score.timestamp}</td>\n                  <td style={{ textAlign: 'left' }}>\n                    <button\n                      style={{ color: 'red' }}\n                      onClick={() => handleDelete(score.id)}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/components/LoginForm.js",["170","171"],[],"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, GoogleAuthProvider } from 'firebase/auth';\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from './GlobalContext';\n\n// LoginSuccessful is a function sent in by parent component\nfunction LoginForm({ LoginEvent }) {\n    const { googleID, updateGoogleID } = useGlobalContext();\n    const firebaseConfig = {\n        apiKey: \"AIzaSyCqxHDg3mlIlUNokf8pd9VjAwAj9HgmOq4\",\n        authDomain: \"wheeloffortune-login.firebaseapp.com\",\n        projectId: \"wheeloffortune-login\",\n        storageBucket: \"wheeloffortune-login.appspot.com\",\n        messagingSenderId: \"5607927999\",\n        appId: \"1:5607927999:web:0a67b3ffc5b342530f160a\",\n        measurementId: \"G-KS9Z5VWJDD\"\n    };\n\n    initializeApp(firebaseConfig);\n\n    const [loggedUser, setLoggedUser] = useState('');\n\n    // function to sign in with Google's page\n    const signInWithGoogle = () => {\n\n        const provider = new GoogleAuthProvider();\n        const auth = getAuth();\n        signInWithRedirect(auth, provider)\n            .then((result) => {\n                // User signed in\n                setLoggedUser(result.user)\n\n            }).catch((error) => {\n                // Handle Errors here.\n                console.error(error);\n            });\n    };\n\n    // function to sign out\n    function logoutGoogle() {\n        const auth = getAuth();\n        auth.signOut();\n        setLoggedUser(null)\n    }\n\n    // we put the onAuthStateChanged in useEffect so this is only called when \n    // this component mounts  \n    useEffect(() => {\n        const auth = getAuth();\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                // User is signed in.\n                setLoggedUser(user);\n                updateGoogleID(user.email);\n                localStorage.setItem(\"googleId\",user.email)\n\n            } else {\n                // No user is signed in.\n            }\n            LoginEvent(user);\n        });\n        \n    }, []);\n    // note the ? to show either login or logout button\n    return (\n        <div >\n            {loggedUser ?\n                <>\n                    <div>\n                        <button onClick={logoutGoogle} style={{\n                            padding: '10px 20px',\n                            fontSize: '16px',\n                            backgroundColor: '#3498db',\n                            color: '#fff',\n                            border: 'none',\n                            borderRadius: '5px',\n                            cursor: 'pointer',\n                            marginTop: '30px'\n                        }}>Sign out</button>\n                        <p>Welcome, {loggedUser.email}!</p>\n                    </div>\n                </>\n\n                : <div >\n                    <button onClick={signInWithGoogle}\n                        style={{\n                            padding: '10px 20px',\n                            fontSize: '16px',\n                            backgroundColor: '#2ecc71',\n                            color: '#fff',\n                            border: 'none',\n                            borderRadius: '5px',\n                            cursor: 'pointer',\n                            marginTop: '10px'\n                        }}>Sign in with Google</button>\n                    <p>Please sign in to continue.</p> </div>\n            }\n\n        </div>\n    );\n\n}\nexport default LoginForm;","/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/components/Form.js",[],[],"/Users/daikexin/Desktop/CS514/WheelOfFortuneGame/wheelOfFortune-react/src/components/SaveRecordModel.js",[],[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":14,"column":12,"nodeType":"176","messageId":"177","endLine":14,"endColumn":30},{"ruleId":"174","severity":1,"message":"178","line":20,"column":11,"nodeType":"176","messageId":"177","endLine":20,"endColumn":19},{"ruleId":"174","severity":1,"message":"179","line":30,"column":23,"nodeType":"176","messageId":"177","endLine":30,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":156,"column":8,"nodeType":"182","endLine":156,"endColumn":10,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":160,"column":13,"nodeType":"186","endLine":167,"endColumn":15},{"ruleId":"174","severity":1,"message":"187","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":15},{"ruleId":"180","severity":1,"message":"188","line":59,"column":6,"nodeType":"182","endLine":59,"endColumn":8,"suggestions":"189"},{"ruleId":"174","severity":1,"message":"187","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":15},{"ruleId":"180","severity":1,"message":"190","line":101,"column":6,"nodeType":"182","endLine":101,"endColumn":16,"suggestions":"191"},{"ruleId":"174","severity":1,"message":"192","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"193","line":48,"column":11,"nodeType":"176","messageId":"177","endLine":48,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":56,"column":13,"nodeType":"186","endLine":60,"endColumn":15},{"ruleId":"174","severity":1,"message":"194","line":8,"column":13,"nodeType":"176","messageId":"177","endLine":8,"endColumn":21},{"ruleId":"180","severity":1,"message":"195","line":68,"column":8,"nodeType":"182","endLine":68,"endColumn":10,"suggestions":"196"},{"ruleId":"174","severity":1,"message":"175","line":14,"column":12,"nodeType":"176","messageId":"177","endLine":14,"endColumn":30},{"ruleId":"174","severity":1,"message":"178","line":20,"column":11,"nodeType":"176","messageId":"177","endLine":20,"endColumn":19},{"ruleId":"174","severity":1,"message":"179","line":30,"column":23,"nodeType":"176","messageId":"177","endLine":30,"endColumn":37},{"ruleId":"174","severity":1,"message":"197","line":144,"column":19,"nodeType":"176","messageId":"177","endLine":144,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":153,"column":8,"nodeType":"182","endLine":153,"endColumn":10,"suggestions":"198"},{"ruleId":"184","severity":1,"message":"185","line":157,"column":13,"nodeType":"186","endLine":164,"endColumn":15},{"ruleId":"174","severity":1,"message":"192","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"197","line":28,"column":19,"nodeType":"176","messageId":"177","endLine":28,"endColumn":27},{"ruleId":"174","severity":1,"message":"193","line":45,"column":11,"nodeType":"176","messageId":"177","endLine":45,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":52,"column":13,"nodeType":"186","endLine":56,"endColumn":15},{"ruleId":"174","severity":1,"message":"187","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":15},{"ruleId":"180","severity":1,"message":"188","line":56,"column":6,"nodeType":"182","endLine":56,"endColumn":8,"suggestions":"199"},{"ruleId":"174","severity":1,"message":"187","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":15},{"ruleId":"174","severity":1,"message":"197","line":38,"column":13,"nodeType":"176","messageId":"177","endLine":38,"endColumn":21},{"ruleId":"180","severity":1,"message":"190","line":95,"column":6,"nodeType":"182","endLine":95,"endColumn":16,"suggestions":"200"},{"ruleId":"174","severity":1,"message":"194","line":8,"column":13,"nodeType":"176","messageId":"177","endLine":8,"endColumn":21},{"ruleId":"180","severity":1,"message":"195","line":63,"column":8,"nodeType":"182","endLine":63,"endColumn":10,"suggestions":"201"},"no-new-object",["202"],"no-unused-vars","'inputValueFromForm' is assigned a value but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'updateGoogleID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'googleID' and 'initializeGame'. Either include them or remove the dependency array.","ArrayExpression",["203"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'displayAll', 'googleID', and 'updateGoogleID'. Either include them or remove the dependency array.",["204"],"React Hook useEffect has a missing dependency: 'displayByGoogleId'. Either include it or remove the dependency array.",["205"],"'useEffect' is defined but never used.","'handleInputChange' is assigned a value but never used.","'googleID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'LoginEvent' and 'updateGoogleID'. Either include them or remove the dependency array. If 'LoginEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["206"],"'response' is assigned a value but never used.",["207"],["208"],["209"],["210"],"no-object-constructor",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"211","fix":"219"},{"desc":"213","fix":"220"},{"desc":"215","fix":"221"},{"desc":"217","fix":"222"},"Update the dependencies array to be: [googleID, initializeGame]",{"range":"223","text":"224"},"Update the dependencies array to be: [displayAll, googleID, updateGoogleID]",{"range":"225","text":"226"},"Update the dependencies array to be: [displayByGoogleId, googleID]",{"range":"227","text":"228"},"Update the dependencies array to be: [LoginEvent, updateGoogleID]",{"range":"229","text":"230"},{"range":"231","text":"224"},{"range":"232","text":"226"},{"range":"233","text":"228"},{"range":"234","text":"230"},[5058,5060],"[googleID, initializeGame]",[1790,1792],"[displayAll, googleID, updateGoogleID]",[2981,2991],"[displayByGoogleId, googleID]",[2180,2182],"[LoginEvent, updateGoogleID]",[4896,4898],[1660,1662],[2767,2777],[2025,2027]]