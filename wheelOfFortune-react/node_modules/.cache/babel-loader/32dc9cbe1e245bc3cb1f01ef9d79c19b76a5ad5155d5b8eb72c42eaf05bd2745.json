{"ast":null,"code":"var _jsxFileName = \"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './Form';\nimport SaveRecordModel from './SaveRecordModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [inputValueFromForm, setInputValueFromForm] = useState('');\n  const [info, setInfo] = useState('');\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [phrase, setPhrase] = useState('');\n  const [isGameOver, setIsGameOver] = useState(true);\n  const [score, setScore] = useState(0);\n  const phrases = ['Hello World', 'Happy coding', 'React is awesome', 'JavaScript rocks', 'Web development'];\n  const getRandomPhrase = () => {\n    const randomIndex = Math.floor(Math.random() * phrases.length);\n    return phrases[randomIndex];\n  };\n  const handleFormSubmit = value => {\n    // Receive the input value from MyForm and set it in App's state\n\n    setInputValueFromForm(value);\n    processGuess(value);\n  };\n  const getHiddenPhrase = phrase => {\n    let hiddenPhrase = '';\n    for (let i = 0; i < phrase.length; i++) {\n      if (/[a-zA-Z]/.test(phrase[i])) {\n        hiddenPhrase += '*';\n      } else {\n        hiddenPhrase += phrase[i];\n      }\n    }\n    return hiddenPhrase;\n  };\n  const processGuess = ch => {\n    const newHiddenPhrase = [...hiddenPhrase];\n    const normalizedCh = ch.toLowerCase();\n    if (/^[a-zA-Z]$/.test(ch)) {\n      let flag = false;\n      for (let i = 0; i < phrase.length; ++i) {\n        const letter = phrase[i].toLowerCase();\n        if (letter === normalizedCh) {\n          flag = true;\n          newHiddenPhrase[i] = phrase[i];\n          setHiddenPhrase(newHiddenPhrase);\n        }\n        console.log(i, \"phrase\", phrase, \"hidden\", hiddenPhrase);\n      }\n      if (!flag) {\n        setInfo(\"It's wrong! Input again!\");\n      } else {\n        setScore(score + 10);\n        setInfo(\"It's right. Input next guess\");\n      }\n    } else {\n      setInfo(\"It is not a letter!!!\");\n    }\n    if (newHiddenPhrase.join('') === phrase) {\n      setInfo(\"Congratulations!\");\n      setIsGameOver(true);\n    }\n  };\n  const initializeGame = () => {\n    const newPhrase = getRandomPhrase();\n    setPhrase(newPhrase);\n    setInfo('');\n    setHiddenPhrase(getHiddenPhrase(newPhrase));\n  };\n  const handleReplayClick = () => {\n    initializeGame();\n  };\n  const handleEndGameClick = () => {\n    setInfo('Game ended. Thank you for playing!');\n    setHiddenPhrase(getHiddenPhrase(phrase));\n  };\n  const handleSaveRecord = () => {\n    console.log(\"save record\");\n    setIsGameOver(false);\n    initializeGame();\n  };\n  useEffect(() => {\n    initializeGame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"wheelOfFortune.png\",\n      alt: \"Top Image\",\n      style: {\n        height: '300px',\n        width: '1500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The following is the hiddenPhrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '60px',\n        marginTop: '40px'\n      },\n      children: hiddenPhrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bottom-button replay-button\",\n          onClick: handleReplayClick,\n          children: \"Replay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bottom-button end-game-button\",\n          onClick: handleEndGameClick,\n          children: \"End Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SaveRecordModel, {\n      isOpen: isGameOver,\n      onClose: () => setIsGameOver(false),\n      onSave: handleSaveRecord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"7lRXAp6Tk8czfRPszyMhAsNOTWE=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Form","SaveRecordModel","jsxDEV","_jsxDEV","Game","_s","inputValueFromForm","setInputValueFromForm","info","setInfo","hiddenPhrase","setHiddenPhrase","phrase","setPhrase","isGameOver","setIsGameOver","score","setScore","phrases","getRandomPhrase","randomIndex","Math","floor","random","length","handleFormSubmit","value","processGuess","getHiddenPhrase","i","test","ch","newHiddenPhrase","normalizedCh","toLowerCase","flag","letter","console","log","join","initializeGame","newPhrase","handleReplayClick","handleEndGameClick","handleSaveRecord","className","children","src","alt","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginTop","onSubmit","onClick","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './Form'\nimport SaveRecordModel from './SaveRecordModel';\n\n\nfunction Game() {\n  const [inputValueFromForm, setInputValueFromForm] = useState('');\n  const [info, setInfo] = useState('');\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [phrase, setPhrase] = useState('');\n  const [isGameOver, setIsGameOver] = useState(true);\n  const [score, setScore] = useState(0);\n\n\n  const phrases = [\n    'Hello World',\n    'Happy coding',\n    'React is awesome',\n    'JavaScript rocks',\n    'Web development',\n  ];\n  const getRandomPhrase = () => {\n    const randomIndex = Math.floor(Math.random() * phrases.length);\n    return phrases[randomIndex];\n  };\n\n  const handleFormSubmit = (value) => {\n    // Receive the input value from MyForm and set it in App's state\n\n    setInputValueFromForm(value);\n    processGuess(value)\n  };\n\n  const getHiddenPhrase = (phrase) => {\n    let hiddenPhrase = '';\n\n    for (let i = 0; i < phrase.length; i++) {\n      if (/[a-zA-Z]/.test(phrase[i])) {\n        hiddenPhrase += '*';\n      } else {\n        hiddenPhrase += phrase[i];\n      }\n    }\n    return hiddenPhrase;\n  }\n  const processGuess = (ch) => {\n    const newHiddenPhrase = [...hiddenPhrase];\n    const normalizedCh = ch.toLowerCase();\n\n    if (/^[a-zA-Z]$/.test(ch)) {\n      let flag = false;\n\n      for (let i = 0; i < phrase.length; ++i) {\n        const letter = phrase[i].toLowerCase();\n        if (letter === normalizedCh) {\n          flag = true;\n          newHiddenPhrase[i] = phrase[i];\n          setHiddenPhrase(newHiddenPhrase);\n        }\n        console.log(i, \"phrase\", phrase, \"hidden\", hiddenPhrase)\n      }\n\n      if (!flag) {\n        setInfo(\"It's wrong! Input again!\")\n      } else {\n        setScore(score+10);\n        setInfo(\"It's right. Input next guess\")\n      }\n    } else {\n      setInfo(\"It is not a letter!!!\")\n    }\n    if (newHiddenPhrase.join('') === phrase) {\n      setInfo(\"Congratulations!\");\n      setIsGameOver(true);\n    }\n  }\n  const initializeGame = () => {\n    const newPhrase = getRandomPhrase();\n    setPhrase(newPhrase);\n    setInfo('');\n    setHiddenPhrase(getHiddenPhrase(newPhrase));\n  };\n  const handleReplayClick = () => {\n    initializeGame();\n  };\n\n  const handleEndGameClick = () => {\n    \n    setInfo('Game ended. Thank you for playing!');\n    setHiddenPhrase(getHiddenPhrase(phrase));\n  };\n  const handleSaveRecord = () => {\n    console.log(\"save record\")\n    setIsGameOver(false);\n    initializeGame(); \n  };\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <img\n        src=\"wheelOfFortune.png\"\n        alt=\"Top Image\"\n        style={{\n          height: '300px',\n          width: '1500px'\n        }}\n      />\n      <h1>The following is the hiddenPhrase</h1>\n\n      <div style={{\n        fontSize: '60px',\n        marginTop: '40px'\n      }}>{hiddenPhrase}</div>\n      <div className=\"form-container\">\n        <Form onSubmit={handleFormSubmit} />\n        <h1>{info}</h1>\n        <div>\n          <button className='bottom-button replay-button' onClick={handleReplayClick}>Replay</button>\n          <button className='bottom-button end-game-button' onClick={handleEndGameClick}>End Game</button>\n        </div>\n\n      </div>\n      <SaveRecordModel\n        isOpen={isGameOver}\n        onClose={() => setIsGameOver(false)}\n        onSave={handleSaveRecord}\n      />\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}