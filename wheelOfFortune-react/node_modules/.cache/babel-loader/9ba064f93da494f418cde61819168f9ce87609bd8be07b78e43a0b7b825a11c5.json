{"ast":null,"code":"var _jsxFileName = \"/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport './Game.css';\nimport Form from '../components/Form';\nimport SaveRecordModel from '../components/SaveRecordModel';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useGlobalContext } from '../components/GlobalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [inputValueFromForm, setInputValueFromForm] = useState('');\n  const [info, setInfo] = useState('');\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [phrase, setPhrase] = useState('');\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const location = useLocation();\n  const userId = location.state && location.state.Id;\n  // const [currentTimestamp, setCurrentTimestamp] = useState('');\n  const currentDate = getCurrentDate();\n  const phrases = ['Hello World', 'Happy coding', 'React is awesome', 'JavaScript rocks', 'Web development'];\n  const {\n    googleID,\n    updateGoogleID\n  } = useGlobalContext();\n  function getCurrentDate() {\n    const currentDate = new Date();\n    const year = currentDate.getFullYear();\n    const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n    const day = currentDate.getDate().toString().padStart(2, '0');\n    const formattedDate = `${year}-${month}-${day}`;\n    return formattedDate;\n  }\n  const getRandomPhrase = () => {\n    // setCurrentTimestamp(Date.now());\n    const randomIndex = Math.floor(Math.random() * phrases.length);\n    return phrases[randomIndex];\n  };\n  const handleFormSubmit = value => {\n    // Receive the input value from MyForm and set it in App's state\n\n    setInputValueFromForm(value);\n    processGuess(value);\n  };\n  const getHiddenPhrase = phrase => {\n    let hiddenPhrase = '';\n    for (let i = 0; i < phrase.length; i++) {\n      if (/[a-zA-Z]/.test(phrase[i])) {\n        hiddenPhrase += '*';\n      } else {\n        hiddenPhrase += phrase[i];\n      }\n    }\n    return hiddenPhrase;\n  };\n  const processGuess = ch => {\n    const newHiddenPhrase = [...hiddenPhrase];\n    const normalizedCh = ch.toLowerCase();\n    if (/^[a-zA-Z]$/.test(ch)) {\n      let flag = false;\n      for (let i = 0; i < phrase.length; ++i) {\n        const letter = phrase[i].toLowerCase();\n        if (letter === normalizedCh) {\n          flag = true;\n          newHiddenPhrase[i] = phrase[i];\n          setHiddenPhrase(newHiddenPhrase);\n        }\n        console.log(i, \"phrase\", phrase, \"hidden\", hiddenPhrase);\n      }\n      if (!flag) {\n        setScore(score - 2);\n        setInfo(\"It's wrong! Input again!\");\n      } else {\n        setScore(score + 10);\n        setInfo(\"It's right. Input next guess\");\n      }\n    } else {\n      setInfo(\"It is not a letter!!!\");\n    }\n    if (newHiddenPhrase.join('') === phrase) {\n      setScore(score + 30);\n      // setCurrentTimestamp(Date.now());\n      setInfo(\"Congratulations!\");\n      setIsGameOver(true);\n    }\n  };\n  const initializeGame = () => {\n    const newPhrase = getRandomPhrase();\n    setPhrase(newPhrase);\n    setInfo('');\n    setHiddenPhrase(getHiddenPhrase(newPhrase));\n  };\n  const handleReplayClick = () => {\n    initializeGame();\n  };\n  const handleEndGameClick = () => {\n    setInfo('Game ended. Thank you for playing!');\n    setHiddenPhrase(getHiddenPhrase(phrase));\n  };\n  const handleSaveRecord = () => {\n    console.log(\"save record\");\n    setIsGameOver(false);\n    saveGameRecord();\n    initializeGame();\n  };\n  const handleClose = () => {\n    console.log(\"close\");\n    setIsGameOver(false);\n    setScore(0);\n  };\n  async function saveGameRecord() {\n    const postData = {\n      googleId: googleID,\n      score,\n      timestamp: currentDate\n    };\n    try {\n      const response = await axios.post('https://wheeloffortune-game.wl.r.appspot.com/game/saveGameRecord', postData);\n      console.log('Response:', response.data);\n      setScore(0);\n    } catch (error) {\n      console.error('Error posting data:', error);\n    }\n  }\n  ;\n  useEffect(() => {\n    initializeGame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"wheelOfFortune.png\",\n      alt: \"Top Image\",\n      style: {\n        height: '300px',\n        width: '1000px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile\",\n          children: \"Go to Profile page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/scores\",\n          children: \"Go to Scores page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-part\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The following is the hiddenPhrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '50px',\n          marginTop: '40px'\n        },\n        children: hiddenPhrase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '30px',\n          color: 'purple'\n        },\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bottom-button replay-button\",\n            onClick: handleReplayClick,\n            children: \"Replay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bottom-button end-game-button\",\n            onClick: handleEndGameClick,\n            children: \"End Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SaveRecordModel, {\n      isOpen: isGameOver,\n      onClose: () => handleClose,\n      onSave: handleSaveRecord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"cm6PJnH93a1LfL8ixDSptf9VGA8=\", false, function () {\n  return [useLocation, useGlobalContext];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Form","SaveRecordModel","useLocation","Link","axios","useGlobalContext","jsxDEV","_jsxDEV","Game","_s","inputValueFromForm","setInputValueFromForm","info","setInfo","hiddenPhrase","setHiddenPhrase","phrase","setPhrase","isGameOver","setIsGameOver","score","setScore","location","userId","state","Id","currentDate","getCurrentDate","phrases","googleID","updateGoogleID","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","formattedDate","getRandomPhrase","randomIndex","Math","floor","random","length","handleFormSubmit","value","processGuess","getHiddenPhrase","i","test","ch","newHiddenPhrase","normalizedCh","toLowerCase","flag","letter","console","log","join","initializeGame","newPhrase","handleReplayClick","handleEndGameClick","handleSaveRecord","saveGameRecord","handleClose","postData","googleId","timestamp","response","post","data","error","className","children","src","alt","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","to","marginTop","fontSize","color","onSubmit","onClick","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/daikexin/Desktop/CS514/wheelOfFortune-react/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport './Game.css';\nimport Form from '../components/Form'\nimport SaveRecordModel from '../components/SaveRecordModel';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useGlobalContext } from '../components/GlobalContext';\n\n\n\nfunction Game() {\n    const [inputValueFromForm, setInputValueFromForm] = useState('');\n    const [info, setInfo] = useState('');\n    const [hiddenPhrase, setHiddenPhrase] = useState('');\n    const [phrase, setPhrase] = useState('');\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [score, setScore] = useState(0);\n    const location = useLocation();\n    const userId = location.state && location.state.Id;\n    // const [currentTimestamp, setCurrentTimestamp] = useState('');\n    const currentDate = getCurrentDate();\n    const phrases = [\n        'Hello World',\n        'Happy coding',\n        'React is awesome',\n        'JavaScript rocks',\n        'Web development',\n    ];\n    const { googleID, updateGoogleID } = useGlobalContext();\n    function getCurrentDate() {\n        const currentDate = new Date();\n      \n        const year = currentDate.getFullYear();\n        const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n        const day = currentDate.getDate().toString().padStart(2, '0');\n      \n        const formattedDate = `${year}-${month}-${day}`;\n      \n        return formattedDate;\n      }\n    const getRandomPhrase = () => {\n        // setCurrentTimestamp(Date.now());\n        const randomIndex = Math.floor(Math.random() * phrases.length);\n        return phrases[randomIndex];\n    };\n\n    const handleFormSubmit = (value) => {\n        // Receive the input value from MyForm and set it in App's state\n\n        setInputValueFromForm(value);\n        processGuess(value)\n    };\n\n    const getHiddenPhrase = (phrase) => {\n        let hiddenPhrase = '';\n\n        for (let i = 0; i < phrase.length; i++) {\n            if (/[a-zA-Z]/.test(phrase[i])) {\n                hiddenPhrase += '*';\n            } else {\n                hiddenPhrase += phrase[i];\n            }\n        }\n        return hiddenPhrase;\n    }\n    const processGuess = (ch) => {\n        const newHiddenPhrase = [...hiddenPhrase];\n        const normalizedCh = ch.toLowerCase();\n\n        if (/^[a-zA-Z]$/.test(ch)) {\n            let flag = false;\n\n            for (let i = 0; i < phrase.length; ++i) {\n                const letter = phrase[i].toLowerCase();\n                if (letter === normalizedCh) {\n                    flag = true;\n                    newHiddenPhrase[i] = phrase[i];\n                    setHiddenPhrase(newHiddenPhrase);\n                }\n                console.log(i, \"phrase\", phrase, \"hidden\", hiddenPhrase)\n            }\n\n            if (!flag) {\n                setScore(score - 2);\n                setInfo(\"It's wrong! Input again!\")\n            } else {\n                setScore(score + 10);\n                setInfo(\"It's right. Input next guess\")\n            }\n        } else {\n            setInfo(\"It is not a letter!!!\")\n        }\n        if (newHiddenPhrase.join('') === phrase) {\n            setScore(score + 30);\n            // setCurrentTimestamp(Date.now());\n            setInfo(\"Congratulations!\");\n            setIsGameOver(true);\n           \n        }\n    }\n    const initializeGame = () => {\n        const newPhrase = getRandomPhrase();\n        setPhrase(newPhrase);\n        setInfo('');\n        setHiddenPhrase(getHiddenPhrase(newPhrase));\n    };\n    const handleReplayClick = () => {\n        initializeGame();\n    };\n\n    const handleEndGameClick = () => {\n\n        setInfo('Game ended. Thank you for playing!');\n        setHiddenPhrase(getHiddenPhrase(phrase));\n    };\n    const handleSaveRecord = () => {\n        console.log(\"save record\")\n        setIsGameOver(false);\n        saveGameRecord();\n        initializeGame();\n    };\n    const handleClose = () => {\n        console.log(\"close\")\n        setIsGameOver(false);\n        setScore(0)\n    };\n    async function saveGameRecord() {\n\n        const postData = {\n            googleId:googleID,\n            score,\n            timestamp:currentDate,\n        };\n\n        try {\n            const response = await axios.post('https://wheeloffortune-game.wl.r.appspot.com/game/saveGameRecord', postData);\n            console.log('Response:', response.data);\n            setScore(0)\n\n        } catch (error) {\n            console.error('Error posting data:', error);\n        }\n    };\n    useEffect(() => {\n        initializeGame();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <img\n                src=\"wheelOfFortune.png\"\n                alt=\"Top Image\"\n                style={{\n                    height: '300px',\n                    width: '1000px'\n                }}\n            />\n            <div className=\"left-column\">\n\n\n                <div>\n                    <Link to=\"/profile\">\n                        Go to Profile page\n                    </Link>\n                </div>\n                <div style={{  marginTop: '30px' }}>\n                    <Link to=\"/scores\">\n                        Go to Scores page\n                    </Link>\n                </div>\n            </div>\n\n            <div className=\"game-part\">\n                <h1>The following is the hiddenPhrase</h1>\n\n                <div style={{\n                    fontSize: '50px',\n                    marginTop: '40px'\n                }}>{hiddenPhrase}</div>\n                <div style={{\n                    fontSize: '30px',\n                    color: 'purple'\n                }}>Score: {score}</div>\n                <div className=\"form-container\">\n                    <Form onSubmit={handleFormSubmit} />\n                    <h2>{info}</h2>\n                    {/* <h2>{currentDate}</h2> */}\n                    <div>\n                        <button className='bottom-button replay-button' onClick={handleReplayClick}>Replay</button>\n                        <button className='bottom-button end-game-button' onClick={handleEndGameClick}>End Game</button>\n                    </div>\n\n                </div>\n            </div>\n            {/* <div>{googleID}</div> */}\n            <SaveRecordModel\n                isOpen={isGameOver}\n                onClose={() => handleClose}\n                onSave={handleSaveRecord}\n            />\n        </div>\n    );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}