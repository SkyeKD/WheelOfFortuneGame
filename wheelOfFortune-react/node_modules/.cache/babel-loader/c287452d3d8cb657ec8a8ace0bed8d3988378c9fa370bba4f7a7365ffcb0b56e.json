{"ast":null,"code":"var _jsxFileName = \"/Users/daikexin/Desktop/react-intro/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValueFromForm, setInputValueFromForm] = useState('');\n  const [info, setInfo] = useState('');\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const phrase = \"Happy coding\";\n  const handleFormSubmit = value => {\n    // Receive the input value from MyForm and set it in App's state\n\n    setInputValueFromForm(value);\n    processGuess(value);\n  };\n  const getHiddenPhrase = phrase => {\n    let hiddenPhrase = '';\n    for (let i = 0; i < phrase.length; i++) {\n      if (/[a-zA-Z]/.test(phrase[i])) {\n        hiddenPhrase += '*';\n      } else {\n        hiddenPhrase += phrase[i];\n      }\n    }\n    return hiddenPhrase;\n  };\n  const processGuess = ch => {\n    console.log(\"ch\", ch);\n    if (/^[a-zA-Z]$/.test(ch)) {\n      let flag = false;\n      for (let i = 0; i < phrase.length; ++i) {\n        const letter = phrase[i];\n        if (letter == ch) {\n          flag = true;\n          setHiddenPhrase(hiddenPhrase.substring(0, i) + ch + hiddenPhrase.substring(i + 1));\n          console.log(hiddenPhrase.substring(0, i) + ch + hiddenPhrase.substring(i + 1));\n          console.log(hiddenPhrase);\n        }\n        console.log(i, hiddenPhrase);\n      }\n      if (!flag) {\n        setInfo(\"It's wrong! Input again!\");\n      } else {\n        setInfo(\"It's right. Input next guess\");\n      }\n    } else {\n      setInfo(\"It is not a letter!!!\");\n    }\n    if (hiddenPhrase == phrase) {\n      setInfo(\"Congratulations!\");\n      return;\n    }\n  };\n  const inialize = () => {\n    setHiddenPhrase(getHiddenPhrase(phrase));\n  };\n  // Use the useEffect hook to call the function each time the component re-renders\n  useEffect(() => {\n    inialize(); // Call the function\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"wheelOfFortune.png\",\n      alt: \"Top Image\",\n      style: {\n        height: '300px',\n        width: '900px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '60px',\n        marginTop: '40px'\n      },\n      children: hiddenPhrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Input value from MyForm: \", inputValueFromForm]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"jncZ08lpfzWPFOJXmBS9FiYhYGU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Form","jsxDEV","_jsxDEV","App","_s","inputValueFromForm","setInputValueFromForm","info","setInfo","hiddenPhrase","setHiddenPhrase","phrase","handleFormSubmit","value","processGuess","getHiddenPhrase","i","length","test","ch","console","log","flag","letter","substring","inialize","className","children","src","alt","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginTop","onSubmit","_c","$RefreshReg$"],"sources":["/Users/daikexin/Desktop/react-intro/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './Form'\n\nfunction App() {\n  const [inputValueFromForm, setInputValueFromForm] = useState('');\n  const [info, setInfo] = useState('');\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n\n  const phrase = \"Happy coding\"\n\n  const handleFormSubmit = (value) => {\n    // Receive the input value from MyForm and set it in App's state\n\n    setInputValueFromForm(value);\n    processGuess(value)\n  };\n  const getHiddenPhrase = (phrase) => {\n    let hiddenPhrase = '';\n\n    for (let i = 0; i < phrase.length; i++) {\n      if (/[a-zA-Z]/.test(phrase[i])) {\n        hiddenPhrase += '*';\n      } else {\n        hiddenPhrase += phrase[i];\n      }\n    }\n    return hiddenPhrase;\n  }\n  const processGuess = (ch) => {\n    \n    console.log(\"ch\",ch)\n    if (/^[a-zA-Z]$/.test(ch)) {\n      let flag = false;\n  \n      for (let i = 0; i < phrase.length; ++i) {\n        const letter = phrase[i];\n        if (letter == ch) {\n          flag = true;\n          setHiddenPhrase(hiddenPhrase.substring(0, i) + ch + hiddenPhrase.substring(i + 1));\n          console.log(hiddenPhrase.substring(0, i) + ch + hiddenPhrase.substring(i + 1))\n          console.log(hiddenPhrase)\n        }\n        console.log(i,hiddenPhrase)\n      }\n  \n      if (!flag) {\n        setInfo(\"It's wrong! Input again!\")\n      } else {\n        setInfo(\"It's right. Input next guess\")\n      }\n    } else {\n      setInfo(\"It is not a letter!!!\")\n    }\n    if(hiddenPhrase==phrase){\n      setInfo(\"Congratulations!\");\n      return;\n    }\n  } \n\nconst inialize = () => {\n  setHiddenPhrase(getHiddenPhrase(phrase));\n\n}\n// Use the useEffect hook to call the function each time the component re-renders\nuseEffect(() => {\n  inialize(); // Call the function\n}, []);\nreturn (\n  <div className=\"App\">\n    <img\n      src=\"wheelOfFortune.png\"\n      alt=\"Top Image\"\n      style={{\n        height: '300px',\n        width: '900px'\n      }}\n    />\n    {/* <h1>WheelOfFortune</h1> */}\n    <div style={{\n      fontSize: '60px',\n      marginTop: '40px'\n    }}>{hiddenPhrase}</div>\n    <div className=\"form-container\">\n      <Form onSubmit={handleFormSubmit} />\n      <p>Input value from MyForm: {inputValueFromForm}</p>\n      <h2>{info}</h2>\n    </div>\n  </div>\n);\n  }\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}